#!/usr/bin/env ruby

# encoding: UTF-8

require 'uri'
require 'net/http'
require 'json'
require 'yaml'
require 'logger'

@dir = "/tmp"

#
# Simple Ruby script to query Dark Sky and return a nice unicode icon that goes into my
# tmux status bar
#
# TODO: Make cache location configurable (maybe this should go in Dropbox to minimize usage across all sessions)
# TODO: Fairly niave code in that it assumes that dark sky is available...
#

config_file = File.join(ENV['HOME'], ".weather.yml")
if(File.exist?(config_file))
  @config = YAML::load(File.read(config_file))
  @debug   = @config['debug']
  @logger  = Logger.new(@config['log_file'])
  @api_key = @config['api_key']
else
  puts "Unable to load configuration. Please setup ~/.weather.yml as specified in the README."
end

def update_weather
	gps_coordinates = `~/bin/WhereIsMyLaptop`
  uri = URI("https://api.darkskyapp.com/v1/forecast/#{@api_key}/#{gps_coordinates}")
  Net::HTTP.start(uri.host, uri.port, :use_ssl => uri.scheme == 'https') do |http|
    request = Net::HTTP::Get.new uri.request_uri

    response = http.request request
    File.open("/#{@dir}/weather.json", 'w') {|f| f.write(response.body) }

    status = JSON.load(response.body)
  	return status["currentSummary"]
  end
end

def get_current_weather
  if (File.exist? "/#{@dir}/weather.json")
    status = JSON.load(File.open("#{@dir}/weather.json"))
    return status["currentSummary"]
  else
    return "rain"
  end
end

now = Time.now.to_i
last_modified = File.mtime("#{@dir}/weather.json").to_i

if(@debug)
  @logger.info("DarkSky data last modified #{now - last_modified} seconds ago.")
end

if ((now - last_modified) > 600)
  if(@debug)
    @logger.info("Time to update from DarkSky")
  end

  status = update_weather
else
  if(@debug)
    @logger.info("Using cache to display weather.")
  end

  status = get_current_weather
end

case status
when /cloudy/
  puts "\u2601"
when /rain/
  puts "\u2602"
when /snow/
  puts "\u2744"
when "!"
  puts "!" # Signifies a problem getting to the cache or dark sky
else
  puts "\u2600"
end

